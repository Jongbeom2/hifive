{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","hifiveNum","setHifiveNum","useEffect","socket","socketIOClient","transports","on","hifive","disconnect","onClickBtn","a","axios","post","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAiCeA,EA3BH,WAAO,IAAD,EACkBC,mBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,KAEhBC,qBAAU,WACR,IAAMC,EAASC,IAJuB,GAIC,CACrCC,WAAY,CAAC,eAKf,OAHAF,EAAOG,GAAG,UAAU,WAClBL,GAAa,SAACM,GAAD,OAAYA,EAAS,QAE7B,WACLJ,EAAOK,gBAER,IACH,IAAMC,EAAU,uCAAG,sBAAAC,EAAA,sEACXC,IAAMC,KAAN,UAfgC,GAehC,YADW,2CAAH,qDAGhB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,gCACA,sBAAKA,UAAU,UAAf,sBAAmCb,KACnC,wBAAQa,UAAU,SAASC,QAASL,EAApC,8BCdSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b3f141fb.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport axios from \"axios\";\nconst API_URL =\n  process.env.NODE_ENV === \"production\" ? \"\" : \"http://localhost:4000\";\nconst App = () => {\n  const [hifiveNum, setHifiveNum] = useState(0);\n  useEffect(() => {\n    const socket = socketIOClient(API_URL, {\n      transports: [\"websocket\"],\n    });\n    socket.on(\"hifive\", () => {\n      setHifiveNum((hifive) => hifive + 1);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const onClickBtn = async () => {\n    await axios.post(`${API_URL}/hifive`);\n  };\n  return (\n    <div className=\"main\">\n      <div className=\"title\">Pub-Sub with Redis</div>\n      <div className=\"content\">HIFIVE : {hifiveNum}</div>\n      <button className=\"button\" onClick={onClickBtn}>\n        ðŸ¤š\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}